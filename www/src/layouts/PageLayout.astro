---
import Header from "../components/Header.astro";

export interface Props {
  title: string
  description: string
  class?: string
  frontmatter?: Record<string, any>
}

const { frontmatter, class: clazz } = Astro.props;

const image = new URL(
  `https://image.luxass.dev/api/image/text?input=${encodeURIComponent(
    JSON.stringify({
      width: 300,
      height: 300,
      text: "ðŸ“–",
    }),
  )}`,
);

const title = frontmatter?.title || Astro.props.title || ".projectrc";
const description = frontmatter?.description || Astro.props.description || "A file that are used by my website to generate a list of projects.";
---

<!doctype html>
<html lang="en">
  <head>
    <!-- global metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />

    <!-- primary meta tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- optional meta tags -->
    <meta name="darkreader-lock" content="" />

    <!-- open graph -->
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="luxass.dev" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />

    <!-- twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={image} />

    <!-- links -->
    <link rel="sitemap" href="/sitemap-index.xml" />

    <link rel="preload" href="/fonts/lexend.woff2" as="font" type="font/woff2" crossorigin="anonymous" />
  </head>
  <body class="font-sans">
    <Header />
    <main class="prose max-w-none mt-8 flex flex-col" class:list={clazz}>
      <slot />
    </main>
    <style is:global>
      html {
        @apply: antialiased touch-manipulation scroll-smooth text-base;
        text-rendering: optimizeLegibility;
      }

      html.dark {
        background: #111;
        color: white;
        color-scheme: dark;
      }

      body {
        @apply: max-w-4xl lg:!mx-auto !mx-4 py3 md:px14 md:py10;
      }

      .astro-code {
        @apply: overflow-auto p-4 border border-base rounded;
      }

      html.dark .astro-code,
      html.dark .astro-code span {
        color: var(--shiki-dark) !important;
        background-color: var(--shiki-dark-bg) !important;
      }
    </style>
  </body>
</html>

<script is:inline>
  function run() {
    const prefersDark = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
    const setting = localStorage.getItem("theme") || "auto";
    if (setting === "dark" || (prefersDark && setting !== "light")) {
      document.documentElement.classList.toggle("dark", true);
    }
  }
  run();
</script>
