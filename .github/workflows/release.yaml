name: Release

on:
  tags:
    - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - run: cargo build --release
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      - run: cargo test
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  docker:
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
        with:
          install: true

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=false
          labels: |
            org.opencontainers.image.title=Mosaic
            org.opencontainers.image.description=An API Gateway for my projects
          # https://github.com/docker/metadata-action#major-version-zero
          tags: |
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}},enable=${{ startsWith(github.ref, 'refs/tags/v') && !startsWith(github.ref, 'refs/tags/v0.') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-') }}
            type=raw,value=beta,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=nightly

      - name: Login to DockerHub
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6.2.0
        if: ${{ github.event.inputs.dry-run != 'true' }}
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}